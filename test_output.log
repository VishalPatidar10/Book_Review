============================= test session starts =============================
platform win32 -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0 -- C:\Users\Vishal\book-review-api\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Vishal\book-review-api
plugins: anyio-4.9.0, asyncio-1.0.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 8 items

app/tests/test_books.py::test_get_books_empty FAILED                     [ 12%]
app/tests/test_books.py::test_create_book FAILED                         [ 25%]
app/tests/test_books.py::test_get_books_with_data FAILED                 [ 37%]
app/tests/test_books.py::test_add_review FAILED                          [ 50%]
app/tests/test_integration_cache.py::test_cache_miss_get_books FAILED    [ 62%]
app/tests/test_main.py::test_create_book FAILED                          [ 75%]
app/tests/test_main.py::test_get_reviews_empty FAILED                    [ 87%]
app/tests/test_main.py::test_add_review FAILED                           [100%]

================================== FAILURES ===================================
____________________________ test_get_books_empty _____________________________

self = <Mapper at 0x266d9516ad0; Review>, key = 'book'
_configure_mappers = False

    def get_property(
        self, key: str, _configure_mappers: bool = False
    ) -> MapperProperty[Any]:
        """return a MapperProperty associated with the given key."""
    
        if _configure_mappers:
            self._check_configure()
    
        try:
>           return self._props[key]
                   ^^^^^^^^^^^^^^^^
E           KeyError: 'book'

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2522: KeyError

The above exception was the direct cause of the following exception:

client = <starlette.testclient.TestClient object at 0x00000266D991C190>

    def test_get_books_empty(client):
>       response = client.get("/api/books")
                   ^^^^^^^^^^^^^^^^^^^^^^^^

app\tests\test_books.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:465: in get
    return super().get(
venv\Lib\site-packages\httpx\_client.py:1053: in get
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:24: in get_books
    books = db.query(models.Book).all()
            ^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\sqlalchemy\orm\session.py:2955: in query
    return self._query_cls(entities, self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\sqlalchemy\orm\query.py:276: in __init__
    self._set_entities(entities)
venv\Lib\site-packages\sqlalchemy\orm\query.py:289: in _set_entities
    coercions.expect(
venv\Lib\site-packages\sqlalchemy\sql\coercions.py:388: in expect
    insp._post_inspect
venv\Lib\site-packages\sqlalchemy\util\langhelpers.py:1338: in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2724: in _post_inspect
    self._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4255: in _do_configure_registries
    mapper._post_configure_properties()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2418: in _post_configure_properties
    prop.init()
venv\Lib\site-packages\sqlalchemy\orm\interfaces.py:589: in init
    self.do_init()
venv\Lib\site-packages\sqlalchemy\orm\relationships.py:1661: in do_init
    self._generate_backref()
venv\Lib\site-packages\sqlalchemy\orm\relationships.py:2145: in _generate_backref
    self._add_reverse_property(self.back_populates)
venv\Lib\site-packages\sqlalchemy\orm\relationships.py:1592: in _add_reverse_property
    other = self.mapper.get_property(key, _configure_mappers=False)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Mapper at 0x266d9516ad0; Review>, key = 'book'
_configure_mappers = False

    def get_property(
        self, key: str, _configure_mappers: bool = False
    ) -> MapperProperty[Any]:
        """return a MapperProperty associated with the given key."""
    
        if _configure_mappers:
            self._check_configure()
    
        try:
            return self._props[key]
        except KeyError as err:
>           raise sa_exc.InvalidRequestError(
                f"Mapper '{self}' has no property '{key}'.  If this property "
                "was indicated from other mappers or configure events, ensure "
                "registry.configure() has been called."
            ) from err
E           sqlalchemy.exc.InvalidRequestError: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2524: InvalidRequestError
______________________________ test_create_book _______________________________

client = <starlette.testclient.TestClient object at 0x00000266D98D7820>

    def test_create_book(client):
>       response = client.post("/api/books", json={"title": "FastAPI Guide", "author": "Vishal"})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

app\tests\test_books.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
__________________________ test_get_books_with_data ___________________________

client = <starlette.testclient.TestClient object at 0x00000266D98D7A80>

    def test_get_books_with_data(client):
>       client.post("/api/books", json={"title": "FastAPI Guide", "author": "Vishal"})

app\tests\test_books.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
_______________________________ test_add_review _______________________________

client = <starlette.testclient.TestClient object at 0x00000266D9926C30>

    def test_add_review(client):
        # create a book
>       book = client.post("/api/books", json={"title": "Review Me", "author": "Author X"}).json()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

app\tests\test_books.py:65: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
__________________________ test_cache_miss_get_books __________________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x00000266D98D6C40>

    def test_cache_miss_get_books(monkeypatch):
        # \U0001f447 Simulate Redis cache miss
        monkeypatch.setattr("app.utils.redis_cache.get_cache", lambda key: None)
        monkeypatch.setattr("app.utils.redis_cache.set_cache", lambda k, v, e=60: None)
    
        # \U0001f447 Add book via API
>       client.post("/api/books", json={"title": "Cache Miss Book", "author": "Test Author"})

app\tests\test_integration_cache.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
------------------------------ Captured log call ------------------------------
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 1
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 4
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 7
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 8
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 9
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 10
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 13
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 14
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 15
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 24
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 25
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 27
WARNING  dotenv.main:main.py:27 python-dotenv could not parse statement starting at line 28
______________________________ test_create_book _______________________________

client = <starlette.testclient.TestClient object at 0x00000266D98FEBE0>

    def test_create_book(client):
>       response = client.post("/api/books", json={
            "title": "Test Book",
            "author": "John Doe",
            "description": "Sample description"
        })

app\tests\test_main.py:2: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
___________________________ test_get_reviews_empty ____________________________

client = <starlette.testclient.TestClient object at 0x00000266DA669590>

    def test_get_reviews_empty(client):
        # First add a book
>       book_resp = client.post("/api/books", json={
            "title": "Book With No Reviews",
            "author": "Vishal",
            "description": "Empty reviews test"
        })

app\tests\test_main.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
_______________________________ test_add_review _______________________________

client = <starlette.testclient.TestClient object at 0x00000266DCDD5550>

    def test_add_review(client):
        # First add a book
>       book_resp = client.post("/api/books", json={
            "title": "Review Test Book",
            "author": "Tester",
            "description": "To be reviewed"
        })

app\tests\test_main.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\starlette\testclient.py:538: in post
    return super().post(
venv\Lib\site-packages\httpx\_client.py:1144: in post
    return self.request(
venv\Lib\site-packages\starlette\testclient.py:437: in request
    return super().request(
venv\Lib\site-packages\httpx\_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
venv\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\httpx\_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\testclient.py:340: in handle_request
    raise exc
venv\Lib\site-packages\starlette\testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv\Lib\site-packages\anyio\from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
C:\Python313\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
venv\Lib\site-packages\anyio\from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv\Lib\site-packages\starlette\applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\errors.py:187: in __call__
    raise exc
venv\Lib\site-packages\starlette\middleware\errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\middleware\exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:734: in app
    await route.handle(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:288: in handle
    await self.app(scope, receive, send)
venv\Lib\site-packages\starlette\routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    raise exc
venv\Lib\site-packages\starlette\_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv\Lib\site-packages\starlette\routing.py:73: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
venv\Lib\site-packages\fastapi\routing.py:301: in app
    raw_response = await run_endpoint_function(
venv\Lib\site-packages\fastapi\routing.py:214: in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\starlette\concurrency.py:37: in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv\Lib\site-packages\anyio\to_thread.py:56: in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
venv\Lib\site-packages\anyio\_backends\_asyncio.py:2470: in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
venv\Lib\site-packages\anyio\_backends\_asyncio.py:967: in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
app\routes\book_routes.py:37: in create_book
    db_book = models.Book(**book.dict())
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:4: in __init__
    ???
venv\Lib\site-packages\sqlalchemy\orm\state.py:566: in _initialize_instance
    manager.dispatch.init(self, args, kwargs)
venv\Lib\site-packages\sqlalchemy\event\attr.py:497: in __call__
    fn(*args, **kw)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4406: in _event_on_init
    instrumenting_mapper._check_configure()
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:2401: in _check_configure
    _configure_registries({self.registry}, cascade=True)
venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4214: in _configure_registries
    _do_configure_registries(registries, cascade)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

registries = set(), cascade = True

    @util.preload_module("sqlalchemy.orm.decl_api")
    def _do_configure_registries(
        registries: Set[_RegistryType], cascade: bool
    ) -> None:
        registry = util.preloaded.orm_decl_api.registry
    
        orig = set(registries)
    
        for reg in registry._recurse_with_dependencies(registries):
            has_skip = False
    
            for mapper in reg._mappers_to_configure():
                run_configure = None
    
                for fn in mapper.dispatch.before_mapper_configured:
                    run_configure = fn(mapper, mapper.class_)
                    if run_configure is EXT_SKIP:
                        has_skip = True
                        break
                if run_configure is EXT_SKIP:
                    continue
    
                if getattr(mapper, "_configure_failed", False):
                    e = sa_exc.InvalidRequestError(
                        "One or more mappers failed to initialize - "
                        "can't proceed with initialization of other "
                        "mappers. Triggering mapper: '%s'. "
                        "Original exception was: %s"
                        % (mapper, mapper._configure_failed)
                    )
                    e._configure_failed = mapper._configure_failed  # type: ignore
>                   raise e
E                   sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Book(books)]'. Original exception was: Mapper 'Mapper[Review(reviews)]' has no property 'book'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.

venv\Lib\site-packages\sqlalchemy\orm\mapper.py:4251: InvalidRequestError
============================== warnings summary ===============================
venv\Lib\site-packages\pydantic\_internal\_config.py:323
  C:\Users\Vishal\book-review-api\venv\Lib\site-packages\pydantic\_internal\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

app\models\models.py:33
  C:\Users\Vishal\book-review-api\app\models\models.py:33: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

app\models\models.py:57
  C:\Users\Vishal\book-review-api\app\models\models.py:57: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

app\models\models.py:79
  C:\Users\Vishal\book-review-api\app\models\models.py:79: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

app/tests/test_books.py::test_create_book
app/tests/test_books.py::test_get_books_with_data
app/tests/test_books.py::test_add_review
app/tests/test_integration_cache.py::test_cache_miss_get_books
app/tests/test_main.py::test_create_book
app/tests/test_main.py::test_get_reviews_empty
app/tests/test_main.py::test_add_review
  C:\Users\Vishal\book-review-api\app\routes\book_routes.py:37: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    db_book = models.Book(**book.dict())

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED app/tests/test_books.py::test_get_books_empty - sqlalchemy.exc.Invalid...
FAILED app/tests/test_books.py::test_create_book - sqlalchemy.exc.InvalidRequ...
FAILED app/tests/test_books.py::test_get_books_with_data - sqlalchemy.exc.Inv...
FAILED app/tests/test_books.py::test_add_review - sqlalchemy.exc.InvalidReque...
FAILED app/tests/test_integration_cache.py::test_cache_miss_get_books - sqlal...
FAILED app/tests/test_main.py::test_create_book - sqlalchemy.exc.InvalidReque...
FAILED app/tests/test_main.py::test_get_reviews_empty - sqlalchemy.exc.Invali...
FAILED app/tests/test_main.py::test_add_review - sqlalchemy.exc.InvalidReques...
======================= 8 failed, 11 warnings in 3.50s ========================
